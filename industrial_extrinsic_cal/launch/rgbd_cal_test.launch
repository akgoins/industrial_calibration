<?xml version="1.0" ?>
<launch>

  <arg name="save_location" default="$(find industrial_extrinsic_cal)/yaml" />

  <arg name="show_display" default="true"/>
  <arg name="cal_pkg_name" value="industrial_extrinsic_cal" />
  <arg name="cal_pkg_path" value="$(find industrial_extrinsic_cal)" />
  <arg name="cal_urdf_path" value="$(find industrial_extrinsic_cal)/urdf/camera_scene.urdf" />
  <arg name="show_bounding_box" default="true" />
  


  <include file="$(find openni2_launch)/launch/openni2.launch" >
    <arg name="publish_tf" value="false" />
    <arg name="camera" value="kinect"/>
    <arg name="depth_registration" default="true" />
    <arg name="rgb_camera_info_url"   value="file:///home/aderic/plusone data/1504101060/1504101060_rgb.yaml" />
    <arg name="depth_camera_info_url" value="file:///home/aderic/plusone data/1504101060/1504101060_ir.yaml" />
  </include>

<!--<node pkg="nodelet" type="nodelet" name="depth_correction" args="load rgbd_depth_correction/DepthCorrectionNodelet kinect/kinect_nodelet_manager -no-bond" output="screen">

    <param name="filename" value="/$(arg camera1_serial_no)" />
    <param name="filepath" value="$(arg save_location)/$(arg camera1_serial_no)" />
    <remap from="/kinect/in_cloud" to="/kinect/depth/points"/>
    <remap from="/kinect/out_cloud" to="/kinect/depth/corrected_points" />
  </node-->


  <!-- Launch mutable joint state publisher for calibratable transforms -->
 

  <!--node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher" />
  <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" /-->
  
 
  <group  >
    <!-- Load robot description -->
    <param name="robot_description" textfile="$(arg cal_urdf_path)" />

    <!-- Launch robot state/joint state publishers for camera and target -->
    <node name="robot_state_publisher" pkg="robot_state_publisher" type="state_publisher" >
      <param name="publish_frequency" value="50" />
    </node>
    <node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher" >
      <rosparam param="source_list">[/mutable_joint_states]</rosparam>
    </node>

 <node  name="mutable_joint_state_publisher" pkg="industrial_extrinsic_cal" type="mutable_joint_state_publisher" >
    <param name="mutable_joint_state_yaml_file" value="$(arg save_location)/camera_scene_mutable_joint_states.yaml" />
    <param name="overwrite_mutable_values" value="true" />
  </node>
<!-- launch-prefix="xterm -e gdb -args" -->
<node pkg="industrial_extrinsic_cal" type="rgb_depth_excal" name="camera_calibration_node" output="screen" >
   <param name="yaml_file_path" value="$(find industrial_extrinsic_cal)/yaml/" />
   <remap from="calibration_service" to="camera1_calibration_service"/>

   <param name="use_circle_detector" value="true" />
   <param name="image_topic" value="/camera/rgb/image_raw" />
   <param name="cloud_topic" value="/camera/depth_registered/points" />
   <param name="camera_name" value="camera" />
   <param name="image_height" value="480" />
   <param name="image_width" value="640" />
   <param name="target_frame" value="camera_rgb_optical_frame" />
   <param name="camera_mounting_frame" value="target_frame" />
   <param name="camera_frame" value="camera_link" />
   <param name="ROI_xmin" value="0" />
   <param name="ROI_ymin" value="0" />
   <param name="ROI_xmax" value="640" />
   <param name="ROI_ymax" value="480" />
   <param name="target_rows" value="18" />
   <param name="target_cols" value="24" />
   <param name="target_circle_dia" value="0.015" />
   <param name="target_spacing" value="0.025" />

   <!--param name="" value="" /-->

   <!--rosparam>
     camera_file: "camera_scene_cameras.yaml"
     target_file: "calibration_target_7x5_midsized.yaml"
     cal_job_file: "camera_scene_caljob.yaml"
   </rosparam-->
  </node>
  </group>

    <!-- publishes static frame at period of 100ms (10Hz)-->
    <node pkg="tf" type="static_transform_publisher" name="t2_frame" args="0.575 0 0 0 0 0 target_frame t2_frame 100" />
    <node pkg="tf" type="static_transform_publisher" name="t3_frame" args="0 0.425 0 0 0 0 target_frame t3_frame 100" />
    <node pkg="tf" type="static_transform_publisher" name="t4_frame" args="0.575 0.425 0 0 0 0 target_frame t4_frame 100" />
  <!-- Extrinsic calibration service (launched in global namespace just in case
       multiple camera calibrations are desired.  Each camera in it's own namespace
  -->
  


  

</launch>


