<launch>

  <include file="$(find openni2_launch)/launch/openni2.launch" >
    <arg name="publish_tf" value="true" />
    <arg name="camera" value="camera" />
    <arg name="depth_registration" default="true" />
  </include>

  <include file="$(find robo_cylinder)/launch/robo_cylinder.launch" />

  <node pkg="intrinsic_cal" type="robocyl_ical" name="robocyl_intrinsic_calibration" output="screen" >
         <!-- <param name="image_topic" value="/camera/ir/image" />-->
          <!--<param name="camera_name" value="camera/ir" />-->
          <param name="image_topic" value="/camera/rgb/image_raw" />
          <param name="camera_name" value="camera/rgb" />
          <param name="target_rows" value="18" />
          <param name="target_cols" value="24" />
          <param name="target_circle_dia" value="0.015" />
          <param name="target_spacing" value="0.025" />
          <param name="num_camera_locations" value="8" />
          <param name="camera_spacing" value=".10" />
          <param name="image_height" value="480" />
          <param name="image_width" value="640" />
          <param name="target_to_rail_distance" value="1.0" />
          <param name="use_circle_detector" value="true"/>
          <param name="allowable_cost_per_observation" value="1.0"/>
          <param name="move_client" value="/move_meters"/>
          <param name="power_client" value="/power_io"/>
          <param name="home_client" value="/home"/>
          <remap from="color_image" to="camera/rgb/image_raw" />
         <!--<remap from="color_image" to="camera/ir/image" />-->
  </node>
  <!--
  <node name="observation_view" pkg="image_view" type="image_view" >
      <remap to="/observer_results_image" from="image"/>
  </node>
  -->

</launch>
