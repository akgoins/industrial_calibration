<?xml version="1.0" ?>
<launch>

  <arg name="file" default="camera" />
  <arg name="version1" default="True" />

  
  <include file="$(find openni2_launch)/launch/openni2.launch" >
    <arg name="publish_tf" value="true" />
    <arg name="camera" value="camera" />
    <arg name="depth_registration" default="true" />
    <arg name="rgb_camera_info_url"   value="file://$(find rgbd_depth_correction)/yaml/$(arg file)_rgb.yaml" />
    <arg name="depth_camera_info_url" value="file://$(find rgbd_depth_correction)/yaml/$(arg file)_ir.yaml" />
  </include>

  <!-- If using OLD calibration method (version 1), load target finder service node -->
  <node pkg="target_finder" type="target_locator_srv" name="target_locator_service" output="screen" if="$(arg version1)">

      <!-- Be sure to use RGB projection matrix parameters here after performing intrinsic calibration -->
      <rosparam>
        image_topic: "/camera/rgb/image_rect_color"
        camera_name: "/camera/rgb"
        target_type: 2
        target_rows: 18
        target_cols: 24
        target_circle_dia: 0.015
        target_spacing: 0.025

        target_pos_x: 0.0
        target_pos_y: 0.0
        target_pos_z: 0.6
        target_orn_x: 0.707
        target_orn_y: 0.0
        target_orn_z: 0.0
        target_orn_w: 0.707
      </rosparam>

    <param name="use_circle_detector" value="true" />
    <param name="image_height" value="480" />
    <param name="image_width" value="640" />
    <param name="target_frame" value="camera_rgb_optical_frame" />
    <param name="camera_mounting_frame" value="target_frame" />
    <param name="camera_frame" value="camera_link" />
    <param name="ROI_xmin" value="0" />
    <param name="ROI_ymin" value="0" />
    <param name="ROI_xmax" value="640" />
    <param name="ROI_ymax" value="480" />
    <param name="target_rows" value="18" />
    <param name="target_cols" value="24" />
    <param name="target_circle_dia" value="0.015" />
    <param name="target_spacing" value="0.025" />
  </node>

  <!-- If using NEW calibration method (version 2), load rgbd calibration node -->
  <include file="$(find industrial_extrinsic_cal)/launch/rgbd_cal_test.launch" unless="$(arg version1)" />

  <node pkg="rgbd_depth_correction" type="depth_calibration" name="depth_cal_node" output="screen" >

    <remap from="target_pose" to="/RangeExCalService" unless="$(arg version1)" />
    <remap from="target_pose" to="/TargetLocateService" if="$(arg version1)" />

    <remap from="depth_points" to="/camera/depth_registered/points" />
    <remap from="image" to="/camera/rgb/image_rect_color" />
    <param name="num_views" value="5"/>
    <param name="filepath" value="$(find rgbd_depth_correction)/yaml" />
    <param name="filename" value="$(arg file)" />

    <rosparam>
      target_pos_x: 0.0
      target_pos_y: 0.0
      target_pos_z: 0.6
      target_orn_x: 0.707
      target_orn_y: 0.0
      target_orn_z: 0.0
      target_orn_w: 0.707

    </rosparam>
  </node>

  <node name="image_view" pkg="image_view" type="image_view">
    <remap from="image" to="/camera/rgb/image_rect_color" />
  </node>
</launch>
