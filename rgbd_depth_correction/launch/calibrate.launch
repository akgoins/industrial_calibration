<?xml version="1.0" ?>
<launch>

  <arg name="file" default="camera" />
  
  <include file="$(find openni2_launch)/launch/openni2.launch" >
    <arg name="publish_tf" value="true" />
    <arg name="camera" value="camera" />
    <arg name="depth_registration" default="true" />
    <arg name="rgb_camera_info_url"   value="file://$(find rgbd_depth_correction)/yaml/$(arg file)_rgb.yaml" />
    <arg name="depth_camera_info_url" value="file://$(find rgbd_depth_correction)/yaml/$(arg file)_ir.yaml" />
  </include>

 
  <!-- If using NEW calibration method (version 2), load rgbd calibration node -->
  <include file="$(find industrial_extrinsic_cal)/launch/rgbd_cal_test.launch" />

  <node pkg="rgbd_depth_correction" type="depth_calibration" name="depth_cal_node" output="screen" >

    <remap from="target_pose" to="/RangeExCalService" />

    <remap from="depth_points" to="/camera/depth_registered/points" />
    <remap from="image" to="/camera/rgb/image_rect_color" />
    <param name="num_views" value="5"/>
    <param name="stride" value="2"/>
    <param name="filepath" value="$(find rgbd_depth_correction)/yaml" />
    <param name="filename" value="$(arg file)" />

    <rosparam>
      target_pos_x: 0.0
      target_pos_y: 0.0
      target_pos_z: 0.6
      target_orn_x: 0.707
      target_orn_y: 0.0
      target_orn_z: 0.0
      target_orn_w: 0.707

    </rosparam>
  </node>

  <node name="image_view" pkg="image_view" type="image_view">
    <remap from="image" to="/camera/rgb/image_rect_color" />
  </node>
</launch>
